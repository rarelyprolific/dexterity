services:
  mongodb:
    image: mongo:8.0
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  # This init step just pre-populates/resets back some test data we need to exist in the database during development.
  mongodb-init:
    image: mongo:8.0
    container_name: mongodb-init
    depends_on:
      - mongodb
    volumes:
      - ./mongodb-init:/init
    entrypoint: ["mongosh", "mongodb://mongodb:27017/dexterity", "/init/seed-incidents-testdata.js", "/init/seed-tasks-testdata.js", "/init/seed-wiki-testdata.js"]

  # The Keycloak sign on site is not currently integrated into the system so nothing depends upon it yet.
  signon:
    image: quay.io/keycloak/keycloak
    container_name: signon
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    command: start-dev

  incidentapi:
    build:
      context: apis/incident-api
    image: rarelyprolific/dexterity-incidentapi:latest
    container_name: incidentapi
    depends_on:
      - mongodb
    ports:
      - 8910:8900
    environment:
      - MONGODB_URI=mongodb://mongodb:27017

  taskapi:
    build:
      context: apis/task-api
    image: rarelyprolific/dexterity-taskapi:latest
    container_name: taskapi
    depends_on:
      - mongodb
    ports:
      - 8920:8900
    environment:
      - MONGODB_URI=mongodb://mongodb:27017

  # The command line tool is intended to be an easy way to interact with the system and prove connectivity before creating a UI.
  # It allows us to verify everything works both inside the internal network (via this "shell" container) and we can connect to
  # frontend endpoints from outside the network (by running the command line tool on a host or other machine).
  # As a bonus, if we can perform every function of the system via the command line it makes scripting and automation easier.
  shell:
    build:
      context: shell
    image: rarelyprolific/dexterity-shell:latest
    container_name: shell
    depends_on:
      - incidentapi
      - taskapi
    environment:
      - INCIDENT_API_URI=http://incidentapi:8900
      - TASK_API_URI=http://taskapi:8900

volumes:
  mongo_data:
